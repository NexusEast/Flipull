enum CCPageScrollViewDirection {
    kCCPageScrollViewDirectionNone = -1,
    kCCPageScrollViewDirectionHorizontal = 0,
    kCCPageScrollViewDirectionVertical = 1,
    kCCPageScrollViewDirectionBoth = 2,
};

class CCPageScrollView : public CCLayer
{
    CCPageScrollView();
    virtual ~CCPageScrollView();

    bool init();
    virtual void registerWithTouchDispatcher();
    static CCPageScrollView* create(CCSize size, CCNode* container = NULL);
    static CCPageScrollView* create();
    bool initWithViewSize(CCSize size, CCNode* container = NULL);
    void setContentOffset(CCPoint offset, bool animated = false);
    CCPoint getContentOffset();
    void setContentOffsetInDuration(CCPoint offset, float dt);
    void setZoomScale(float s);
    void setZoomScale(float s, bool animated);
    float getZoomScale();
    void setZoomScaleInDuration(float s, float dt);
    CCPoint minContainerOffset();
    CCPoint maxContainerOffset();
    bool isNodeVisible(CCNode * node);
    void pause(CCObject* sender);
    void resume(CCObject* sender);
    bool isDragging();
    bool isTouchMoved();
    bool isBounceable();
    void setBounceable(bool bBounceable);

    CCSize getViewSize();
    void setViewSize(CCSize size);

    CCNode * getContainer();
    void setContainer(CCNode * pContainer);

    CCPageScrollViewDirection getDirection();
    virtual void setDirection(CCPageScrollViewDirection eDirection);

    virtual int ccTouchBegan(CCTouch *pTouch, CCEvent *pEvent);
    virtual int ccTouchMoved(CCTouch *pTouch, CCEvent *pEvent);
    virtual void ccTouchEnded(CCTouch *pTouch, CCEvent *pEvent);
    virtual void ccTouchCancelled(CCTouch *pTouch, CCEvent *pEvent);

    virtual void setContentSize(const CCSize & size);
    virtual const CCSize& getContentSize() const;

    void updateInset();

    bool isClippingToBounds();
    void setClippingToBounds(bool bClippingToBounds);

    virtual void addChild(CCNode * child, int zOrder, int tag);
    virtual void addChild(CCNode * child, int zOrder);
    virtual void addChild(CCNode * child);
    void setTouchEnabled(bool e);

    enum PageScrollViewScriptEventType
    {
        kPageScrollViewScroll   = 0,
        kPageScrollViewZoom,
    };

    void unregisterScriptHandler(int scriptHandlerType);
    int  getScriptHandler(int scriptHandlerType);

    bool isPaged();
    void setPaged( bool value );
    void setPageWidth(int width);

    void scrollToPage(int page,bool animated = true);
    int getCurrPage();
    bool isScrollingToPage();
    float getScaleFactor() ;
    void setScaleFactor(float factor);
     void setMinScale(float scale );
    float getMinScale();
    int getNumOfPages();
};
